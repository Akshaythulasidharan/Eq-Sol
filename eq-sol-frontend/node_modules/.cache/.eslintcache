[{"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\index.js":"2","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Home.js":"3","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\NavbarHome.js":"4","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Home.js":"5","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\NavbarHome.js":"6","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\HomeBody.js":"7","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\HomeBody.js":"8","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\About.js":"9","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Routes.js":"10","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Camera.js":"11","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Upload.js":"12","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Answer.js":"13","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\ApiFetcher.js":"14","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Routes.js":"15","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Answer.js":"16","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\ApiFetcher.js":"17","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Upload.js":"18","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Camera.js":"19","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\About.js":"20","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\ImageCrop.js":"21","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\ImageCrop.js":"22"},{"size":294,"mtime":1625902911029,"results":"23","hashOfConfig":"24"},{"size":294,"mtime":1625902911029,"results":"25","hashOfConfig":"26"},{"size":653,"mtime":1625902910869,"results":"27","hashOfConfig":"26"},{"size":1906,"mtime":1625902910934,"results":"28","hashOfConfig":"26"},{"size":653,"mtime":1625902910869,"results":"29","hashOfConfig":"24"},{"size":1906,"mtime":1625902910934,"results":"30","hashOfConfig":"24"},{"size":2766,"mtime":1625902910892,"results":"31","hashOfConfig":"24"},{"size":2766,"mtime":1625902910892,"results":"32","hashOfConfig":"26"},{"size":1666,"mtime":1625902910778,"results":"33","hashOfConfig":"24"},{"size":766,"mtime":1625902910955,"results":"34","hashOfConfig":"24"},{"size":1698,"mtime":1625902910849,"results":"35","hashOfConfig":"24"},{"size":2078,"mtime":1625902911008,"results":"36","hashOfConfig":"24"},{"size":2685,"mtime":1625902910803,"results":"37","hashOfConfig":"24"},{"size":2415,"mtime":1625998554623,"results":"38","hashOfConfig":"24"},{"size":766,"mtime":1625902910955,"results":"39","hashOfConfig":"26"},{"size":2685,"mtime":1625902910803,"results":"40","hashOfConfig":"26"},{"size":2415,"mtime":1625998554623,"results":"41","hashOfConfig":"26"},{"size":2078,"mtime":1625902911008,"results":"42","hashOfConfig":"26"},{"size":1698,"mtime":1625902910849,"results":"43","hashOfConfig":"26"},{"size":1666,"mtime":1625902910778,"results":"44","hashOfConfig":"26"},{"size":3904,"mtime":1625902910914,"results":"45","hashOfConfig":"24"},{"size":3904,"mtime":1625902910914,"results":"46","hashOfConfig":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d6fw05",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11fjlid",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\index.js",[],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\index.js",[],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Home.js",[],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\NavbarHome.js",["96"],"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Home.js",[],"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\NavbarHome.js",["97"],"\n//Navbar of our Web Application. contains logo and link for HomeBody.js and About.js visit them\nimport React,{ useState } from 'react'\nimport Logo from './images/EQ-Sol Logo Full.svg'\nimport {Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,NavbarText} from 'reactstrap';\nimport {Link} from 'react-router-dom'\n\nexport default function NavbarHome() {\n\n    const [isOpen, setIsOpen] = useState(false);  \n    const toggle = () => setIsOpen(!isOpen);\n    const [HomeActive,SetActive] = useState(false);\n    // Logic for that nav icon active\n    var Home,About;\n    if(HomeActive){\n        Home = <Link to=\"/\" onClick={e => SetActive(false)} className=\"fas fa-home homenavbar-icon \" ></Link>\n        About = <Link to=\"/about\" onClick={e => SetActive(true)} className=\"fas fa-info-circle homenavbar-icon active\" ></Link>\n    }else{\n        Home = <Link to=\"/\" onClick={e => SetActive(false)} className=\"fas fa-home homenavbar-icon active\" ></Link>\n        About = <Link to=\"/about\" onClick={e => SetActive(true)} className=\"fas fa-info-circle homenavbar-icon \" ></Link>\n    }\n    return (\n        <div>\n             <Navbar className=\"navbar-home\" expand=\"xs\">\n                <NavbarBrand>\n                    <Link to=\"/\">\n                        <img src={Logo} className=\"navbarhome-logo\" />\n                    </Link>\n                </NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto ml-auto\" navbar>\n                        <NavItem>\n                            {Home}\n                        </NavItem>\n                        <NavItem>\n                            {About}\n                        </NavItem> \n                    </Nav>\n                    <NavbarText><i class=\"fas fa-cog spin\"  ></i></NavbarText>\n                </Collapse>\n            </Navbar>\n        </div>\n    )\n}\n","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\HomeBody.js",["98","99"],"\n//the module which appears at starting, shows heading and two options ie, capture pic using Webcam and Upload.\n//when camera click, HomeBody navigates to Camera.js, visit it.\n// when upload click, a Modal ie, a dialog box appears which displays Upload.js, visit it.\n//also used wc-typed-js module for typing animation\nimport ReactTypingEffect from 'react-typing-effect';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Modal } from 'reactstrap';\nimport camera from \"./images/camera.png\"\nimport upload from \"./images/upload.png\"\nimport Upload from './Upload';\n\nexport default function HomeBody() {\n\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n\n    return (\n        <div className=\"container\">\n            {/* Heading */}\n            <div className=\"row mt-3\">\n                <p className=\"home-heading \">\n                    <ReactTypingEffect\n                        text={[\"Hello, Students\", \"Hola, Estudiantes\", \"Bonjours les Ã©tudiants\"]}\n                        Speed=\"100ms\"\n                        eraseSpeed=\"100ms\"\n                        eraseDelay=\"100ms\"\n                        typingDelay=\"100ms\"\n                        cursor=\" \"\n                    />\n                    <p className=\"home-para\">Let's start solving the equations.</p>\n                </p> \n            </div>\n            {/* The two option boxes, webcam and upload */}\n            <div className=\"row justify-content-center\">\n                <div className=\"col-4 card-box\">\n                    <div className=\"card-content\">\n                        <img src={camera} className=\"home-icon\" /> <br/>  <br/>\n                        <Link to=\"/camera\">\n                            <button className=\"btn btn-home\" style={{position:\"relative\",left:\"50%\",\n                            transform: \"translateX(-50%)\"}}>Capture using Webcam</button>\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"col-1\"></div>\n                <div className=\"col-4 card-box\">\n                    <div className=\"card-content\">\n                        <img src={upload} className=\"home-icon\" /> <br/> <br/>\n                        <Link onClick={toggle}>\n                            <button className=\"btn btn-home\" style={{position:\"relative\",left:\"50%\",\n                            transform: \"translateX(-50%)\"}}>Upload the picture</button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n\n            {/* Modal when upload triggers */}\n            <Modal isOpen={modal} toggle={toggle} centered size=\"xl\" >\n                <Upload toggle={toggle}/>\n            </Modal>\n        </div>\n    )\n}\n\n","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\HomeBody.js",["100","101"],"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\About.js",["102","103","104","105"],"\n// Displays About Us info eg Logo and use of app, team members etc.That's it.\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport Logo from './images/EQ-Sol Logo.svg'\n\nexport default function About() {\n    return (\n        <div className=\"container\" >\n            <div className=\"row\" style={{height:\"50px\"}} ></div>\n            <div className=\"row justify-content-center align-items-center \"  >\n                <div className=\"col-md-4 \" >\n                    <img src={Logo} className=\"about-logo\" />\n                </div>\n                <div className=\"col-md-7 about-box\">\n                    <p className=\"home-para\">\n                        EQ-Sol is a Web Application where the user scans handwritten mathematical equations, and the corresponding solutions are displayed.\n                        <br/> <br/>\n                        EQ-Sol is a Final year Project by Students of IT batch 2017-21, GEC Barton Hill, Trivandrum.\n                        <br/> <br/>\n                        Batch #5  <br/>\n                        <ul style={{listStyleType:\"none\", marginLeft:\"20px\"}}>\n                            <li>Akshay TA &nbsp;&nbsp;<a className=\"fab fa-linkedin list-icon\"></a></li>\n                            <li>Omkar R&nbsp;&nbsp;<i class=\"fab fa-linkedin list-icon\"></i></li>\n                            <li>Karun Krishnan&nbsp;&nbsp;<i class=\"fab fa-linkedin list-icon\"></i></li>\n                            <li>Adhithya T&nbsp;&nbsp;<i class=\"fab fa-linkedin list-icon\" ></i></li>\n                        </ul>\n                        \n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Routes.js",[],"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Camera.js",["106"],"\n//Here displays webcam interface, where we have option of click the photo and clicks one.\n//We are using react-webcam module for this.\n//After clicking the picture, a modal ie dialog box appears displays ImageCrop component\n//We send the clicked image to ImageCrop Component, visit ImageCrop.js\nimport React, { lazy, useState } from 'react'\nimport Webcam from \"react-webcam\";\nimport { Modal, ModalBody} from 'reactstrap';\nimport ImageCrop from './ImageCrop';\n\nexport default function Camera() {\n\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  //method for camera capture\n  const videoConstraints = {\n    width: 1920,\n    height: 1080,\n    facingMode: \"user\"\n  };\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = React.useState(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n  }, [webcamRef, setImgSrc]);\n  \n  return (\n    <div>\n      <div className=\"container-fluid\" >\n        <Webcam \n          audio={false}\n          height={1080}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          width={1920}\n          videoConstraints={videoConstraints}\n          className=\"video-element\"\n        />\n        <button onMouseDown={capture} onMouseUp={toggle} className=\"btn camera-btn\" ><i class=\"fas fa-camera\"></i> </button>\n      </div>\n      {/* Modal after clicking capture button */}\n      <Modal size=\"xl\" className=\"modal\"  centered fade isOpen={modal} toggle={toggle} >\n        <ModalBody  >\n          <ImageCrop image={imgSrc} btn=\"Click another Pic\" toggle={toggle}/>\n        </ModalBody>\n      </Modal>\n    </div>  \n  )\n}\n\n","C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Upload.js",[],"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\Answer.js",[],"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\ApiFetcher.js",["107","108","109","110","111","112","113"],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Routes.js",[],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Answer.js",[],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\ApiFetcher.js",["114","115","116","117","118","119","120"],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Upload.js",[],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\Camera.js",["121"],"C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\About.js",["122","123","124","125"],"C:\\Users\\Acer\\desktop\\Eq-sol\\eq-sol-frontend\\src\\ImageCrop.js",["126","127"],"\n//here it does is, displays image like normal img we get from props, we can drag over the image in any aspect rectangle and crop the image.\n//Here we use react-image-crop module for this, also ReactCrop.css to style the crop box\n//after selecting, the cropped image is sent to ApiFetcher Component when we click proceed btn, visit ApiFetcher.js\nimport React, {Component} from 'react'\nimport 'react-image-crop/dist/ReactCrop.css';\nimport ReactCrop from 'react-image-crop';\nimport { Link } from 'react-router-dom';\nimport { triggerBase64Download } from 'react-base64-downloader';\n \nexport default class ImageCrop extends Component {\n  state = {\n    src: null,\n    crop: {\n    },\n  };\n\n  //below is code for crop image activation\n  onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () =>\n        this.setState({ src: reader.result })\n      );\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n    \n  // If you setState the crop in here you should return false.\n  onImageLoaded = image => {\n    this.imageRef = image;\n  };\n    \n  onCropComplete = crop => {\n    this.makeClientCrop(crop);\n  };\n    \n  onCropChange = (crop, percentCrop) => {\n    // You could also use percentCrop:\n    // this.setState({ crop: percentCrop });\n    this.setState({ crop });\n  };\n    \n  async makeClientCrop(crop) {\n    if (this.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await this.getCroppedImg(\n        this.imageRef,\n        crop,\n        'newFile.jpeg'\n      );\n      this.setState({ croppedImageUrl });\n    }\n  }\n    \n  getCroppedImg(image, crop, fileName) {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n    \n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    const base64Image = canvas.toDataURL('image/png');\n    // triggerBase64Download(base64Image, 'my_download_name')\n    return base64Image\n\n    // return new Promise((resolve, reject) => {\n    //   canvas.toBlob(blob => {\n    //     if (!blob) {\n    //       //reject(new Error('Canvas is empty'));\n    //       console.error('Canvas is empty');\n    //       return;\n    //     }\n    //     blob.name = fileName;\n    //     window.URL.revokeObjectURL(this.fileUrl);\n    //     this.fileUrl = window.URL.createObjectURL(blob);\n    //     resolve(this.fileUrl);\n    //   }, 'image/jpeg');\n    // });\n  }\n\n  render() {\n    const { crop, croppedImageUrl, src } = this.state;\n    return (\n      <div className=\"container\">\n        <div style={{height:\"25px\"}} ></div>\n        <p className=\"text-center \">Drag over the image to crop the respective equation.</p>\n        <div className=\"row\">\n          <ReactCrop src={this.props.image} crop={crop} className=\"img-fluid crop-image\" ruleOfThirds\n            onImageLoaded={this.onImageLoaded}\n            onComplete={this.onCropComplete}\n            onChange={this.onCropChange} \n          />\n      </div>\n      <div className=\"row justify-content-center\">\n        <div >\n          {console.log(this.props.link)}\n          <Link onClick={this.props.toggle}><button className=\"btn btn-home\" style={{margin:\"0px\"}} >{this.props.btn}</button> </Link>\n          {/* here we pass the image to the API Fetcher component */}\n          <Link to={{\n            pathname:\"/answer\",\n            state: {\n              image:croppedImageUrl\n            }\n          }}>\n            <button className=\"btn btn-home\" style={{margin:\"20px\"}} >Proceed</button>\n          </Link>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n","C:\\Users\\Acer\\Desktop\\Eq-sol\\eq-sol-frontend\\src\\ImageCrop.js",["128","129"],{"ruleId":"130","severity":1,"message":"131","line":27,"column":25,"nodeType":"132","endLine":27,"endColumn":71},{"ruleId":"130","severity":1,"message":"131","line":27,"column":25,"nodeType":"132","endLine":27,"endColumn":71},{"ruleId":"130","severity":1,"message":"131","line":39,"column":25,"nodeType":"132","endLine":39,"endColumn":67},{"ruleId":"130","severity":1,"message":"131","line":49,"column":25,"nodeType":"132","endLine":49,"endColumn":67},{"ruleId":"130","severity":1,"message":"131","line":39,"column":25,"nodeType":"132","endLine":39,"endColumn":67},{"ruleId":"130","severity":1,"message":"131","line":49,"column":25,"nodeType":"132","endLine":49,"endColumn":67},{"ruleId":"133","severity":1,"message":"134","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":13,"column":21,"nodeType":"132","endLine":13,"endColumn":62},{"ruleId":"137","severity":1,"message":"138","line":23,"column":55,"nodeType":"132","endLine":23,"endColumn":96},{"ruleId":"139","severity":1,"message":"140","line":23,"column":55,"nodeType":"132","endLine":23,"endColumn":96},{"ruleId":"133","severity":1,"message":"141","line":6,"column":17,"nodeType":"135","messageId":"136","endLine":6,"endColumn":21},{"ruleId":"133","severity":1,"message":"142","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":9},{"ruleId":"133","severity":1,"message":"143","line":10,"column":7,"nodeType":"135","messageId":"136","endLine":10,"endColumn":19},{"ruleId":"133","severity":1,"message":"144","line":22,"column":18,"nodeType":"135","messageId":"136","endLine":22,"endColumn":26},{"ruleId":"133","severity":1,"message":"145","line":24,"column":12,"nodeType":"135","messageId":"136","endLine":24,"endColumn":16},{"ruleId":"133","severity":1,"message":"146","line":24,"column":18,"nodeType":"135","messageId":"136","endLine":24,"endColumn":25},{"ruleId":"133","severity":1,"message":"147","line":28,"column":9,"nodeType":"135","messageId":"136","endLine":28,"endColumn":10},{"ruleId":"148","severity":1,"message":"149","line":36,"column":5,"nodeType":"135","endLine":36,"endColumn":14,"suggestions":"150"},{"ruleId":"133","severity":1,"message":"142","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":9},{"ruleId":"133","severity":1,"message":"143","line":10,"column":7,"nodeType":"135","messageId":"136","endLine":10,"endColumn":19},{"ruleId":"133","severity":1,"message":"144","line":22,"column":18,"nodeType":"135","messageId":"136","endLine":22,"endColumn":26},{"ruleId":"133","severity":1,"message":"145","line":24,"column":12,"nodeType":"135","messageId":"136","endLine":24,"endColumn":16},{"ruleId":"133","severity":1,"message":"146","line":24,"column":18,"nodeType":"135","messageId":"136","endLine":24,"endColumn":25},{"ruleId":"133","severity":1,"message":"147","line":28,"column":9,"nodeType":"135","messageId":"136","endLine":28,"endColumn":10},{"ruleId":"148","severity":1,"message":"149","line":36,"column":5,"nodeType":"135","endLine":36,"endColumn":14,"suggestions":"151"},{"ruleId":"133","severity":1,"message":"141","line":6,"column":17,"nodeType":"135","messageId":"136","endLine":6,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":13,"column":21,"nodeType":"132","endLine":13,"endColumn":62},{"ruleId":"137","severity":1,"message":"138","line":23,"column":55,"nodeType":"132","endLine":23,"endColumn":96},{"ruleId":"139","severity":1,"message":"140","line":23,"column":55,"nodeType":"132","endLine":23,"endColumn":96},{"ruleId":"133","severity":1,"message":"152","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":31},{"ruleId":"133","severity":1,"message":"153","line":95,"column":36,"nodeType":"135","messageId":"136","endLine":95,"endColumn":39},{"ruleId":"133","severity":1,"message":"152","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":31},{"ruleId":"133","severity":1,"message":"153","line":95,"column":36,"nodeType":"135","messageId":"136","endLine":95,"endColumn":39},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'lazy' is defined but never used.","'i' is defined but never used.","'blobToBase64' is assigned a value but never used.","'Seterror' is assigned a value but never used.","'test' is assigned a value but never used.","'SetTest' is assigned a value but never used.","'a' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'SetEqnImg'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.state.image, EqnImg] as a second argument to the useEffect Hook.",["154"],["155"],"'triggerBase64Download' is defined but never used.","'src' is assigned a value but never used.",{"desc":"156","fix":"157"},{"desc":"156","fix":"158"},"Add dependencies array: [props.location.state.image, EqnImg]",{"range":"159","text":"160"},{"range":"161","text":"160"},[1888,1888],", [props.location.state.image, EqnImg]",[1888,1888]]