{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\desktop\\\\Eq-sol\\\\eq-sol-frontend\\\\src\\\\Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n\n  const [uploadImg, SetImg] = useState(0);\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        SetImg(reader.result);\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag 'n' drop some files here, or click to select files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: uploadImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Upload, \"unpvaJpwDPn4jQcCnz00CHaRVrE=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Users/Acer/desktop/Eq-sol/eq-sol-frontend/src/Upload.js"],"names":["React","useCallback","useState","useDropzone","Upload","uploadImg","SetImg","onDrop","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","result","readAsArrayBuffer","getRootProps","getInputProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAWC,MAAX,IAAqBJ,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAMK,MAAM,GAAGN,WAAW,CAAEO,aAAD,IAAmB;AAC1CA,IAAAA,aAAa,CAACC,OAAd,CAAuBC,IAAD,IAAU;AAC9B,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAvB;;AACAJ,MAAAA,MAAM,CAACK,OAAP,GAAiB,MAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB;;AACAJ,MAAAA,MAAM,CAACM,MAAP,GAAgB,MAAM;AACtB;AACEX,QAAAA,MAAM,CAACK,MAAM,CAACO,MAAR,CAAN;AACD,OAHD;;AAIAP,MAAAA,MAAM,CAACQ,iBAAP,CAAyBT,IAAzB;AACD,KAVD;AAYD,GAbuB,EAarB,EAbqB,CAA1B;AAcE,QAAM;AAACU,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgClB,WAAW,CAAC;AAACI,IAAAA;AAAD,GAAD,CAAjD;AAEF,sBACI,oBAASa,YAAY,EAArB;AAAA,4BACF,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,YADE,eAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFE,eAGF;AAAK,MAAA,GAAG,EAAGhB;AAAX;AAAA;AAAA;AAAA;AAAA,YAHE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAzBuBD,M;UAgBoBD,W;;;KAhBpBC,M","sourcesContent":["import React, {useCallback, useState} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nexport default function Upload() {\r\n    const [uploadImg,SetImg] = useState(0);\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file) => {\r\n          const reader = new FileReader()\r\n    \r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n          // Do whatever you want with the file contents\r\n            SetImg(reader.result)\r\n          }\r\n          reader.readAsArrayBuffer(file)\r\n        })\r\n        \r\n      }, [])\r\n      const {getRootProps, getInputProps} = useDropzone({onDrop})\r\n    \r\n    return (\r\n        <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      <p>Drag 'n' drop some files here, or click to select files</p>\r\n      <img src ={uploadImg} />\r\n    </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}