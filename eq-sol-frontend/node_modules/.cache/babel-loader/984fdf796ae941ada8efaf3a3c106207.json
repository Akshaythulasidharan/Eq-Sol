{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\desktop\\\\Eq-sol\\\\eq-sol-frontend\\\\src\\\\Camera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Camera() {\n  _s();\n\n  const videoConstraints = {\n    width: 1920,\n    height: 1080,\n    facingMode: \"user\"\n  };\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = React.useState(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n  }, [webcamRef, setImgSrc]);\n\n  var imgContainer = /*#__PURE__*/_jsxDEV(Webcam, {\n    audio: false,\n    height: 1080,\n    ref: webcamRef,\n    screenshotFormat: \"image/jpeg\",\n    width: 1920,\n    videoConstraints: videoConstraints,\n    className: \"video-element\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 22\n  }, this);\n\n  var button = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: capture,\n    className: \"btn camera-btn\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"fas fa-camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 16\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [imgContainer, button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Camera, \"ESwUrLq+HE9liXlylGlqUDf3hvQ=\");\n\n_c = Camera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["C:/Users/Acer/desktop/Eq-sol/eq-sol-frontend/src/Camera.js"],"names":["React","useState","useEffect","Webcam","Camera","videoConstraints","width","height","facingMode","webcamRef","useRef","imgSrc","setImgSrc","capture","useCallback","imageSrc","current","getScreenshot","imgContainer","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAE/B,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE,IADgB;AAEvBC,IAAAA,MAAM,EAAE,IAFe;AAGvBC,IAAAA,UAAU,EAAE;AAHW,GAAzB;AAKA,QAAMC,SAAS,GAAGT,KAAK,CAACU,MAAN,CAAa,IAAb,CAAlB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACC,QAAN,CAAe,IAAf,CAA5B;AAEA,QAAMY,OAAO,GAAGb,KAAK,CAACc,WAAN,CAAkB,MAAM;AACtC,UAAMC,QAAQ,GAAGN,SAAS,CAACO,OAAV,CAAkBC,aAAlB,EAAjB;AACAL,IAAAA,SAAS,CAACG,QAAD,CAAT;AACD,GAHe,EAGb,CAACN,SAAD,EAAYG,SAAZ,CAHa,CAAhB;;AAMA,MAAIM,YAAY,gBAAG,QAAC,MAAD;AACnB,IAAA,KAAK,EAAE,KADY;AAEnB,IAAA,MAAM,EAAE,IAFW;AAGnB,IAAA,GAAG,EAAET,SAHc;AAInB,IAAA,gBAAgB,EAAC,YAJE;AAKnB,IAAA,KAAK,EAAE,IALY;AAMnB,IAAA,gBAAgB,EAAEJ,gBANC;AAOnB,IAAA,SAAS,EAAC;AAPS;AAAA;AAAA;AAAA;AAAA,UAAnB;;AASA,MAAIc,MAAM,gBAAG;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAA0B,IAAA,SAAS,EAAC,gBAApC;AAAA,4BACb;AAAG,MAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YADa;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;;AAKE,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,iBACGK,YADH,EAEGC,MAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,GAAG,EAAER;AAAV;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaC;;GA3CmBP,M;;KAAAA,M","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport Webcam from \"react-webcam\";\r\n\r\nexport default function Camera() {\r\n\r\n  const videoConstraints = {\r\n    width: 1920,\r\n    height: 1080,\r\n    facingMode: \"user\"\r\n  };\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(null);\r\n\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n  }, [webcamRef, setImgSrc]);\r\n\r\n\r\n  var imgContainer = <Webcam \r\n  audio={false}\r\n  height={1080}\r\n  ref={webcamRef}\r\n  screenshotFormat=\"image/jpeg\"\r\n  width={1920}\r\n  videoConstraints={videoConstraints}\r\n  className=\"video-element\"/>;\r\n  \r\n  var button = <button onClick={capture} className=\"btn camera-btn\" >\r\n  <i class=\"fas fa-camera\"></i> </button> ;\r\n \r\n  \r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\" >\r\n              {imgContainer}\r\n              {button}\r\n            \r\n            </div>\r\n\r\n            <img src={imgSrc}/>\r\n\r\n        </div>\r\n    )\r\n\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}