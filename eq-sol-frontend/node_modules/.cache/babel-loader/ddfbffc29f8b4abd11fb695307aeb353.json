{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\desktop\\\\Eq-sol\\\\eq-sol-frontend\\\\src\\\\ApiFetcher.js\",\n    _s = $RefreshSig$();\n\n//here comes the main phase, where the cropped image from ImageCrop, via Upload or Camera component is passed to backend\\\n//We use REST API technology where we using post method call an API using a link from backend and with it send Image.\n//the reply would contain answers we needed, it is converted to string form and pass all the answers to Answer Component\n//which displays answer, visit Answer.js\nimport React, { useEffect, useState } from 'react';\nimport Answer from './Answer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApiFetcher(props) {\n  _s();\n\n  const [error, Seterror] = useState(0);\n  const [isLoaded, SetisLoaded] = useState(false);\n  const [test, SetTest] = useState(0);\n  const [EqnImg, SetEqnImg] = useState(0);\n  const [Ans, SetAns] = useState(0); // SetAns({\n  //   Eqn:\"5x + 3 = 23\",\n  //   TypeEqn:\"Linear Equation\",\n  //   EqnAns:\"x = 4\"\n  //   });\n\n  var a = {\n    Eqn: \"5x + 3 = 23\",\n    TypeEqn: \"Linear Equation\",\n    EqnAns: \"x = 4\"\n  }; // 'https://jsonplaceholder.typicode.com/todos/1'\n  // useEffect(() => {\n  //     SetEqnImg(props.location.state.image)\n  //     fetch('https://jsonplaceholder.typicode.com/todos/1')\n  //       // .then(res => res.json())\n  //       .then(\n  //         (result) => {\n  //           // SetisLoaded(true);\n  //           // SetTest(result);\n  //           SetAns({\n  //             Eqn:\"5x + 3 = 23\",\n  //             TypeEqn:\"Linear Equation\",\n  //             EqnAns:\"x = 4\"\n  //             });\n  //           // SetAns(result);\n  //         },\n  //         (error) => {\n  //             Seterror(error);\n  //         }\n  //       )\n  // });\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" container text-center home-para\",\n      style: {\n        marginTop: \"50px\",\n        fontSize: \"40px\"\n      },\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"lds-ring\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Answer, {\n        Ans: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), test]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ApiFetcher, \"0I5bD1gHbyBi7C7SXScH3E4A8vw=\");\n\n_c = ApiFetcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiFetcher\");","map":{"version":3,"sources":["C:/Users/Acer/desktop/Eq-sol/eq-sol-frontend/src/ApiFetcher.js"],"names":["React","useEffect","useState","Answer","ApiFetcher","props","error","Seterror","isLoaded","SetisLoaded","test","SetTest","EqnImg","SetEqnImg","Ans","SetAns","a","Eqn","TypeEqn","EqnAns","marginTop","fontSize","message"],"mappings":";;;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEtC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACM,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM,CAACU,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAACY,GAAD,EAAKC,MAAL,IAAeb,QAAQ,CAAC,CAAD,CAA7B,CAPsC,CAQtC;AACA;AACA;AACA;AACA;;AAEA,MAAIc,CAAC,GAAG;AACNC,IAAAA,GAAG,EAAC,aADE;AAENC,IAAAA,OAAO,EAAC,iBAFF;AAGNC,IAAAA,MAAM,EAAC;AAHD,GAAR,CAdsC,CAoBtC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAIb,KAAJ,EAAW;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAkD,MAAA,KAAK,EAAE;AAACc,QAAAA,SAAS,EAAC,MAAX;AAAkBC,QAAAA,QAAQ,EAAC;AAA3B,OAAzD;AAAA,4BAAqGf,KAAK,CAACgB,OAA3G;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFH,MAES,IAAI,CAACd,QAAL,EAAe;AACpB,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA,gCAAsB;AAAA;AAAA;AAAA;AAAA,gBAAtB,eAAiC;AAAA;AAAA;AAAA;AAAA,gBAAjC,eAA4C;AAAA;AAAA;AAAA;AAAA,gBAA5C,eAAuD;AAAA;AAAA;AAAA;AAAA,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKD,GANM,MAMA;AACL,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEQ;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKN,IAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMD;AAIN;;GA/DuBN,U;;KAAAA,U","sourcesContent":["\r\n//here comes the main phase, where the cropped image from ImageCrop, via Upload or Camera component is passed to backend\\\r\n//We use REST API technology where we using post method call an API using a link from backend and with it send Image.\r\n//the reply would contain answers we needed, it is converted to string form and pass all the answers to Answer Component\r\n//which displays answer, visit Answer.js\r\nimport React, {useEffect, useState } from 'react'\r\nimport Answer from './Answer';\r\n\r\nexport default function ApiFetcher(props) {\r\n\r\n    const [error,Seterror] = useState(0);\r\n    const [isLoaded,SetisLoaded] = useState(false);\r\n    const [test, SetTest] = useState(0);\r\n    \r\n    const [EqnImg,SetEqnImg] = useState(0);\r\n    const [Ans,SetAns] = useState(0);\r\n    // SetAns({\r\n    //   Eqn:\"5x + 3 = 23\",\r\n    //   TypeEqn:\"Linear Equation\",\r\n    //   EqnAns:\"x = 4\"\r\n    //   });\r\n\r\n    var a = {\r\n      Eqn:\"5x + 3 = 23\",\r\n      TypeEqn:\"Linear Equation\",\r\n      EqnAns:\"x = 4\"\r\n      };\r\n\r\n    // 'https://jsonplaceholder.typicode.com/todos/1'\r\n    // useEffect(() => {\r\n    //     SetEqnImg(props.location.state.image)\r\n    //     fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n    //       // .then(res => res.json())\r\n    //       .then(\r\n    //         (result) => {\r\n              \r\n    //           // SetisLoaded(true);\r\n    //           // SetTest(result);\r\n    //           SetAns({\r\n    //             Eqn:\"5x + 3 = 23\",\r\n    //             TypeEqn:\"Linear Equation\",\r\n    //             EqnAns:\"x = 4\"\r\n    //             });\r\n    //           // SetAns(result);\r\n              \r\n    //         },\r\n    //         (error) => {\r\n    //             Seterror(error);\r\n    //         }\r\n    //       )\r\n          \r\n    // });\r\n    if (error) {\r\n        return <div className=\" container text-center home-para\" style={{marginTop:\"50px\",fontSize:\"40px\"}}>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return(\r\n            <div className=\"container\" >\r\n                <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n        ) \r\n      } else {\r\n        return (\r\n            <div>\r\n                <Answer Ans={a}/>\r\n                {test}\r\n                </div>\r\n        );\r\n      }\r\n    \r\n\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}