{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\desktop\\\\Eq-sol\\\\eq-sol-frontend\\\\src\\\\UploadCrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport ReactCrop from 'react-image-crop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadCrop(props) {\n  _s();\n\n  const [crop, setCrop] = useState({\n    aspect: 16 / 9\n  });\n  var blob = new Blob([crop], {\n    type: \"image/jpeg\"\n  });\n  var urlCreator = window.URL || window.webkitURL;\n  setCrop(urlCreator.createObjectURL(blob));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: props.image,\n      crop: crop,\n      className: \"img-fluid\",\n      onChange: newCrop => setCrop(newCrop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: crop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadCrop, \"1LMFXjC3f2rCS/h3a26ZsgF8NZU=\");\n\n_c = UploadCrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadCrop\");","map":{"version":3,"sources":["C:/Users/Acer/desktop/Eq-sol/eq-sol-frontend/src/UploadCrop.js"],"names":["React","useState","ReactCrop","UploadCrop","props","crop","setCrop","aspect","blob","Blob","type","urlCreator","window","URL","webkitURL","createObjectURL","image","newCrop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qCAAP;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAAEM,IAAAA,MAAM,EAAE,KAAK;AAAf,GAAD,CAAhC;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAU,CAAEJ,IAAF,CAAV,EAAoB;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAApB,CAAX;AACM,MAAIC,UAAU,GAAGC,MAAM,CAACC,GAAP,IAAcD,MAAM,CAACE,SAAtC;AACAR,EAAAA,OAAO,CAACK,UAAU,CAACI,eAAX,CAA4BP,IAA5B,CAAD,CAAP;AACN,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,GAAG,EAAEJ,KAAK,CAACY,KAAtB;AAA6B,MAAA,IAAI,EAAEX,IAAnC;AAAyC,MAAA,SAAS,EAAC,WAAnD;AAA+D,MAAA,QAAQ,EAAEY,OAAO,IAAIX,OAAO,CAACW,OAAD;AAA3F;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAEZ;AAAV;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAbuBF,U;;KAAAA,U","sourcesContent":["import React, { useState } from 'react'\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\n\r\nexport default function UploadCrop(props) {\r\n\r\n    const [crop, setCrop] = useState({ aspect: 16 / 9 });\r\n    var blob = new Blob( [ crop ], { type: \"image/jpeg\" } );\r\n          var urlCreator = window.URL || window.webkitURL;\r\n          setCrop(urlCreator.createObjectURL( blob ))\r\n    return (\r\n        <div className=\"container\">\r\n            <ReactCrop src={props.image} crop={crop} className=\"img-fluid\" onChange={newCrop => setCrop(newCrop)} />\r\n            <img src={crop} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}