{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\desktop\\\\Eq-sol\\\\eq-sol-frontend\\\\src\\\\Camera.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Webcam from \"react-webcam\";\nimport ImageShow from './ImageShow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Camera() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const videoConstraints = {\n    width: 1920,\n    height: 1080,\n    facingMode: \"user\"\n  };\n  var test = \"Image\";\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = React.useState(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n    test = \"image etty\";\n    return true;\n  }, [webcamRef, setImgSrc]);\n\n  const captImage = () => {\n    _s();\n\n    const webcamRef = React.useRef(null);\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n    test = \"image etty\";\n    return true;\n  };\n\n  _s(captImage, \"xktPpQLC/HvD4LtWpzjiWSp00EE=\");\n\n  const sendImage = () => {\n    /*#__PURE__*/\n    _jsxDEV(ImageShow, {\n      image: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        height: 1080,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: 1920,\n        videoConstraints: videoConstraints,\n        className: \"video-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: captImage(),\n        to: {\n          pathname: '/imageshow',\n          image: imgSrc,\n          test: test\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn camera-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Camera, \"ESwUrLq+HE9liXlylGlqUDf3hvQ=\");\n\n_c = Camera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["C:/Users/Acer/desktop/Eq-sol/eq-sol-frontend/src/Camera.js"],"names":["React","useState","Link","Webcam","ImageShow","Camera","videoConstraints","width","height","facingMode","test","webcamRef","useRef","imgSrc","setImgSrc","capture","useCallback","imageSrc","current","getScreenshot","captImage","sendImage","pathname","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAE/B,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE,IADgB;AAEvBC,IAAAA,MAAM,EAAE,IAFe;AAGvBC,IAAAA,UAAU,EAAE;AAHW,GAAzB;AAKA,MAAIC,IAAI,GAAE,OAAV;AACA,QAAMC,SAAS,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAlB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,KAAK,CAACC,QAAN,CAAe,IAAf,CAA5B;AAEA,QAAMc,OAAO,GAAGf,KAAK,CAACgB,WAAN,CAAkB,MAAM;AACtC,UAAMC,QAAQ,GAAGN,SAAS,CAACO,OAAV,CAAkBC,aAAlB,EAAjB;AACAL,IAAAA,SAAS,CAACG,QAAD,CAAT;AACAP,IAAAA,IAAI,GAAG,YAAP;AACA,WAAO,IAAP;AAED,GANe,EAMb,CAACC,SAAD,EAAYG,SAAZ,CANa,CAAhB;;AAQA,QAAMM,SAAS,GAAG,MAAK;AAAA;;AACrB,UAAMT,SAAS,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAlB;AACA,UAAMK,QAAQ,GAAGN,SAAS,CAACO,OAAV,CAAkBC,aAAlB,EAAjB;AACAL,IAAAA,SAAS,CAACG,QAAD,CAAT;AACAP,IAAAA,IAAI,GAAG,YAAP;AACA,WAAO,IAAP;AACD,GAND;;AAnB+B,KAmBzBU,SAnByB;;AA2B/B,QAAMC,SAAS,GAAG,MAAK;AACrB;AAAA,YAAC,SAAD;AAAW,MAAA,KAAK,EAAER;AAAlB;AAAA;AAAA;AAAA;AAAA;AACD,GAFD;;AAIE,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACA,QAAC,MAAD;AACA,QAAA,KAAK,EAAE,KADP;AAEA,QAAA,MAAM,EAAE,IAFR;AAGA,QAAA,GAAG,EAAEF,SAHL;AAIA,QAAA,gBAAgB,EAAC,YAJjB;AAKA,QAAA,KAAK,EAAE,IALP;AAMA,QAAA,gBAAgB,EAAEL,gBANlB;AAOA,QAAA,SAAS,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,cADA,eAYA,QAAC,IAAD;AAAM,QAAA,OAAO,EAAEc,SAAS,EAAxB;AAA4B,QAAA,EAAE,EAAE;AAC9BE,UAAAA,QAAQ,EAAE,YADoB;AAE9BC,UAAAA,KAAK,EAACV,MAFwB;AAG9BH,UAAAA,IAAI,EAACA;AAHyB,SAAhC;AAAA,qCAIM;AAAS,UAAA,SAAS,EAAC,gBAAnB;AAAA,kCACN;AAAG,YAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,kBADM;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJN;AAAA;AAAA;AAAA;AAAA;AAAA,cAZA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI;AAAK,MAAA,GAAG,EAAEG;AAAV;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BC;;IA1DmBR,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Webcam from \"react-webcam\";\r\nimport ImageShow from './ImageShow';\r\nexport default function Camera() {\r\n\r\n  const videoConstraints = {\r\n    width: 1920,\r\n    height: 1080,\r\n    facingMode: \"user\"\r\n  };\r\n  var test =\"Image\";\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(null);\r\n\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n    test = \"image etty\";\r\n    return true;\r\n    \r\n  }, [webcamRef, setImgSrc]);\r\n\r\n  const captImage = () =>{\r\n    const webcamRef = React.useRef(null);\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n    test = \"image etty\";\r\n    return true;\r\n  }\r\n  \r\n  const sendImage = () =>{\r\n    <ImageShow image={imgSrc} />\r\n  }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\" >\r\n            <Webcam \r\n            audio={false}\r\n            height={1080}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            width={1920}\r\n            videoConstraints={videoConstraints}\r\n            className=\"video-element\"/>\r\n            {/* <button onClick={capture} className=\"btn camera-btn\" >\r\n            <i class=\"fas fa-camera\"></i> </button>\r\n               */}\r\n            <Link onClick={captImage()} to={{\r\n              pathname: '/imageshow',\r\n              image:imgSrc,\r\n              test:test\r\n            }}  > <button  className=\"btn camera-btn\" >\r\n            <i class=\"fas fa-camera\"></i> </button> </Link>\r\n              \r\n            </div>\r\n            <img src={imgSrc}/>\r\n\r\n        </div>\r\n    )\r\n\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}