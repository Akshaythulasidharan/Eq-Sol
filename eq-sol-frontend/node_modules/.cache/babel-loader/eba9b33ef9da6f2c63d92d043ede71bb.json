{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\desktop\\\\Eq-sol\\\\eq-sol-frontend\\\\src\\\\Camera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Camera() {\n  _s();\n\n  const [imgContainer, setImgC] = useState(0);\n  var button;\n  const videoConstraints = {\n    width: 1920,\n    height: 1080,\n    facingMode: \"user\"\n  };\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = React.useState(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n  }, [webcamRef, setImgSrc]);\n  setImgC( /*#__PURE__*/_jsxDEV(Webcam, {\n    audio: false,\n    height: 1080,\n    ref: webcamRef,\n    screenshotFormat: \"image/jpeg\",\n    width: 1920,\n    videoConstraints: videoConstraints,\n    className: \"video-element\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this));\n  button = /*#__PURE__*/_jsxDEV(\"button\", {\n    onMouseDown: capture,\n    className: \"btn camera-btn\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"fas fa-camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [imgContainer, button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Camera, \"6wAzpowMYSyWMfBfy7ENR0+YvPs=\");\n\n_c = Camera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["C:/Users/Acer/desktop/Eq-sol/eq-sol-frontend/src/Camera.js"],"names":["React","useState","useEffect","Webcam","Camera","imgContainer","setImgC","button","videoConstraints","width","height","facingMode","webcamRef","useRef","imgSrc","setImgSrc","capture","useCallback","imageSrc","current","getScreenshot"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAG/B,QAAM,CAACC,YAAD,EAAcC,OAAd,IAAyBL,QAAQ,CAAC,CAAD,CAAvC;AACA,MAAIM,MAAJ;AAEA,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE,IADgB;AAEvBC,IAAAA,MAAM,EAAE,IAFe;AAGvBC,IAAAA,UAAU,EAAE;AAHW,GAAzB;AAKA,QAAMC,SAAS,GAAGZ,KAAK,CAACa,MAAN,CAAa,IAAb,CAAlB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,KAAK,CAACC,QAAN,CAAe,IAAf,CAA5B;AAEA,QAAMe,OAAO,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,MAAM;AACtC,UAAMC,QAAQ,GAAGN,SAAS,CAACO,OAAV,CAAkBC,aAAlB,EAAjB;AACAL,IAAAA,SAAS,CAACG,QAAD,CAAT;AAED,GAJe,EAIb,CAACN,SAAD,EAAYG,SAAZ,CAJa,CAAhB;AAMAT,EAAAA,OAAO,eAAC,QAAC,MAAD;AACN,IAAA,KAAK,EAAE,KADD;AAEN,IAAA,MAAM,EAAE,IAFF;AAGN,IAAA,GAAG,EAAEM,SAHC;AAIN,IAAA,gBAAgB,EAAC,YAJX;AAKN,IAAA,KAAK,EAAE,IALD;AAMN,IAAA,gBAAgB,EAAEJ,gBANZ;AAON,IAAA,SAAS,EAAC;AAPJ;AAAA;AAAA;AAAA;AAAA,UAAD,CAAP;AAUDD,EAAAA,MAAM,gBAAG;AAAQ,IAAA,WAAW,EAAES,OAArB;AAA+B,IAAA,SAAS,EAAC,gBAAzC;AAAA,4BACR;AAAG,MAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YADQ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAOG,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,iBACGX,YADH,EAEGE,MAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaC;;GAlDmBH,M;;KAAAA,M","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport Webcam from \"react-webcam\";\r\nexport default function Camera() {\r\n\r\n\r\n  const [imgContainer,setImgC] = useState(0);\r\n  var button;\r\n\r\n  const videoConstraints = {\r\n    width: 1920,\r\n    height: 1080,\r\n    facingMode: \"user\"\r\n  };\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(null);\r\n\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n    \r\n  }, [webcamRef, setImgSrc]);\r\n\r\n  setImgC(<Webcam \r\n    audio={false}\r\n    height={1080}\r\n    ref={webcamRef}\r\n    screenshotFormat=\"image/jpeg\"\r\n    width={1920}\r\n    videoConstraints={videoConstraints}\r\n    className=\"video-element\"/>);\r\n\r\n  \r\n button = <button onMouseDown={capture}  className=\"btn camera-btn\" >\r\n  <i class=\"fas fa-camera\"></i> </button> ;\r\n\r\n  \r\n \r\n  \r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\" >\r\n              {imgContainer}\r\n              {button}\r\n            \r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}